"use strict";(self.webpackChunkaggregation_pipeline_workshop=self.webpackChunkaggregation_pipeline_workshop||[]).push([["758"],{7799:function(e,t,n){n.r(t),n.d(t,{frontMatter:()=>o,toc:()=>l,default:()=>p,metadata:()=>a,assets:()=>s,contentTitle:()=>g});var a=JSON.parse('{"id":"what-is-aggregation/structure-aggregation","title":"\u{1F4D8} Structure of an Aggregation Pipeline","description":"See the parts that compose an aggregation pipeline.","source":"@site/docs/20-what-is-aggregation/3-structure-aggregation.mdx","sourceDirName":"20-what-is-aggregation","slug":"/what-is-aggregation/structure-aggregation","permalink":"/aggregation-pipeline-lab/docs/what-is-aggregation/structure-aggregation","draft":false,"unlisted":false,"editUrl":"https://github.com/mongodb-developer/aggregation-pipeline-lab/blob/main/docs/20-what-is-aggregation/3-structure-aggregation.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"description":"See the parts that compose an aggregation pipeline."},"sidebar":"tutorialSidebar","previous":{"title":"\u{1F4D8} SQL vs Aggregations","permalink":"/aggregation-pipeline-lab/docs/what-is-aggregation/sql-vs-aggregation"},"next":{"title":"Simple Pipelines","permalink":"/aggregation-pipeline-lab/docs/category/simple-pipelines"}}'),i=n(5893),r=n(65);let o={description:"See the parts that compose an aggregation pipeline."},g="\u{1F4D8} Structure of an Aggregation Pipeline",s={},l=[{value:"Example",id:"example",level:2}];function c(e){let t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"-structure-of-an-aggregation-pipeline",children:"\u{1F4D8} Structure of an Aggregation Pipeline"})}),"\n",(0,i.jsx)(t.p,{children:"To interact with a relational database, we typically use SQL, a fourth-generation language, to access our data. With MongoDB, we instead get data and transform it in incremental steps."}),"\n",(0,i.jsxs)(t.p,{children:["An aggregation pipeline is composed of ",(0,i.jsx)(t.a,{href:"https://www.mongodb.com/docs/manual/reference/operator/aggregation-pipeline/",children:(0,i.jsx)(t.strong,{children:"stages"})}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["We pass an array of stages to the ",(0,i.jsx)(t.code,{children:"aggregate"})," method like so:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"db.mycollection.aggregate([\n    stage1,\n    stage2,\n    stage3\n])\n"})}),"\n",(0,i.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'// Inside the current database, in the collection named reviews\ndb.reviews.aggregate([\n  { \n    // group all reviews for the same book\n    $group: {\n        _id: "$bookId",\n        averageRating: {\n          $avg: "$rating",\n        },\n      },\n  },\n  // filter out all reviews that have an average other than 5\n  { $match: { averageRating: 5 } },\n  // JOIN with author collection to get all the author info\n  { $lookup: {\n        from: "authors",\n        localField: "_id",\n        foreignField: "books",\n        as: "author",\n      },\n  },\n  // add a field called bio\n  {$addFields: {\n    bio: "$author.bio"\n  }},\n])\n'})})]})}function p(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},65:function(e,t,n){n.d(t,{Z:()=>g,a:()=>o});var a=n(7294);let i={},r=a.createContext(i);function o(e){let t=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function g(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);