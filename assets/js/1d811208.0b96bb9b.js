"use strict";(self.webpackChunkaggregation_pipeline_workshop=self.webpackChunkaggregation_pipeline_workshop||[]).push([[9116],{4004:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>g,frontMatter:()=>l,metadata:()=>c,toc:()=>d});var r=t(4848),s=t(8453),o=t(1470),a=t(9365);const l={},i="\ud83d\udc50 Sorting",c={id:"counting-sorting/sorting",title:"\ud83d\udc50 Sorting",description:"We can sort our results using the $sort stage. We need to sort on a field, being 1 ascending and -1 descending order.",source:"@site/docs/50-counting-sorting/10-sorting.mdx",sourceDirName:"50-counting-sorting",slug:"/counting-sorting/sorting",permalink:"/aggregation-pipeline-lab/docs/counting-sorting/sorting",draft:!1,unlisted:!1,editUrl:"https://github.com/mongodb-developer/aggregation-pipeline-lab/blob/main/docs/50-counting-sorting/10-sorting.mdx",tags:[],version:"current",sidebarPosition:10,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udc50 $count",permalink:"/aggregation-pipeline-lab/docs/counting-sorting/counting-documents"},next:{title:"Lookups / Joins",permalink:"/aggregation-pipeline-lab/docs/category/lookups--joins"}},u={},d=[];function h(e){const n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"-sorting",children:"\ud83d\udc50 Sorting"})}),"\n",(0,r.jsxs)(n.p,{children:["We can sort our results using the ",(0,r.jsx)(n.code,{children:"$sort"})," stage. We need to sort on a field, being 1 ascending and -1 descending order."]}),"\n",(0,r.jsx)(n.p,{children:"\ud83d\udc50 Let's get all books from 1984, sorted by number of pages. We'll only show the title, pages, and authors."}),"\n",(0,r.jsxs)(o.A,{groupId:"aggregations",children:[(0,r.jsx)(a.A,{value:"atlas",label:"Atlas UI",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'[\n    {$match: {year: 1984}},\n    {$project: {_id: 0, title: 1, pages: 1, authors: 1}},\n    {$sort: {"pages": 1}},\n]\n'})})}),(0,r.jsx)(a.A,{value:"mongodb-shell",label:"MongoDB Shell",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'let booksFrom1984 = {$match: {year: 1984}};\nlet showOnlyTheseFields = {$project: {_id: 0, title: 1, pages: 1, authors: 1}};\nlet slimmerBooksFirst = {$sort: {"pages": 1}}\n\ndb.books.aggregate([\n    booksFrom1984,\n    showOnlyTheseFields,\n    slimmerBooksFirst,\n]);\n'})})})]}),"\n",(0,r.jsxs)(n.p,{children:["As we can see, books with no ",(0,r.jsx)(n.code,{children:"pages"})," info appear first. These documents don't have that information. Hence, ",(0,r.jsx)(n.code,{children:"pages"})," is ",(0,r.jsx)(n.code,{children:"null"})," and gets sorted as less than any number."]}),"\n",(0,r.jsx)(n.p,{children:"\ud83d\udc50 We can sort the other way around:"}),"\n",(0,r.jsxs)(o.A,{groupId:"aggregations",children:[(0,r.jsx)(a.A,{value:"atlas",label:"Atlas UI",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'[\n    {$match: {year: 1984}},\n    {$project: {_id: 0, title: 1, pages: 1, authors: 1}},\n    {$sort: {"pages": -1}},\n]\n'})})}),(0,r.jsx)(a.A,{value:"mongodb-shell",label:"MongoDB Shell",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'let booksFrom1984 = {$match: {year: 1984}};\nlet showOnlyTheseFields = {$project: {_id: 0, title: 1, pages: 1, authors: 1}};\nlet thickerBooksFirst = {$sort: {"pages": -1}}\n\ndb.books.aggregate([\n    booksFrom1984,\n    showOnlyTheseFields,\n    thickerBooksFirst,\n]);\n'})})})]}),"\n",(0,r.jsx)(n.p,{children:"\ud83d\udc50 How can we get the thickest book from 1984?"}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"Answer"}),(0,r.jsx)("div",{children:(0,r.jsxs)(o.A,{groupId:"aggregations",children:[(0,r.jsx)(a.A,{value:"atlas",label:"Atlas UI",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'[\n    {$match: {year: 1984}},\n    {$project: {_id: 0, title: 1, pages: 1, authors: 1}},\n    {$sort: {"pages": -1}},\n    {$limit: 1}\n]\n'})})}),(0,r.jsx)(a.A,{value:"mongodb-shell",label:"MongoDB Shell",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'let booksFrom1984 = {$match: {year: 1984}};\nlet showOnlyTheseFields = {$project: {_id: 0, title: 1, pages: 1, authors: 1}};\nlet thickerBooksFirst = {$sort: {"pages": -1}}\nlet justOne = {$limit: 1}\n\ndb.books.aggregate([\n    booksFrom1984,\n    showOnlyTheseFields,\n    thickerBooksFirst,\n    justOne\n]);\n'})})})]})})]})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},9365:(e,n,t)=>{t.d(n,{A:()=>a});t(6540);var r=t(8215);const s={tabItem:"tabItem_Ymn6"};var o=t(4848);function a(e){let{children:n,hidden:t,className:a}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,r.A)(s.tabItem,a),hidden:t,children:n})}},1470:(e,n,t)=>{t.d(n,{A:()=>y});var r=t(6540),s=t(8215),o=t(3104),a=t(6347),l=t(205),i=t(7485),c=t(1682),u=t(679);function d(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:s}}=e;return{value:n,label:t,attributes:r,default:s}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function g(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:t}=e;const s=(0,a.W6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,i.aZ)(o),(0,r.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(s.location.search);n.set(o,e),s.replace({...s.location,search:n.toString()})}),[o,s])]}function b(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,o=h(e),[a,i]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!g({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:o}))),[c,d]=p({queryString:t,groupId:s}),[b,m]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,o]=(0,u.Dv)(t);return[s,(0,r.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:s}),f=(()=>{const e=c??b;return g({value:e,tabValues:o})?e:null})();(0,l.A)((()=>{f&&i(f)}),[f]);return{selectedValue:a,selectValue:(0,r.useCallback)((e=>{if(!g({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),d(e),m(e)}),[d,m,o]),tabValues:o}}var m=t(2303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=t(4848);function x(e){let{className:n,block:t,selectedValue:r,selectValue:a,tabValues:l}=e;const i=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.a_)(),u=e=>{const n=e.currentTarget,t=i.indexOf(n),s=l[t].value;s!==r&&(c(n),a(s))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=i.indexOf(e.currentTarget)+1;n=i[t]??i[0];break}case"ArrowLeft":{const t=i.indexOf(e.currentTarget)-1;n=i[t]??i[i.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:o}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>i.push(e),onKeyDown:d,onClick:u,...o,className:(0,s.A)("tabs__item",f.tabItem,o?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:o}=e;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===o));return e?(0,r.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==o})))})}function k(e){const n=b(e);return(0,j.jsxs)("div",{className:(0,s.A)("tabs-container",f.tabList),children:[(0,j.jsx)(x,{...n,...e}),(0,j.jsx)(v,{...n,...e})]})}function y(e){const n=(0,m.A)();return(0,j.jsx)(k,{...e,children:d(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var r=t(6540);const s={},o=r.createContext(s);function a(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);