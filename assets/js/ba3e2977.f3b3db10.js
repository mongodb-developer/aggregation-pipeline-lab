"use strict";(self.webpackChunkaggregation_pipeline_workshop=self.webpackChunkaggregation_pipeline_workshop||[]).push([[761],{8921:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>g,contentTitle:()=>a,default:()=>d,frontMatter:()=>t,metadata:()=>i,toc:()=>l});var o=r(4848),s=r(8453);const t={},a="\ud83d\udc50 Group",i={id:"grouping/group",title:"\ud83d\udc50 Group",description:"We can sum all the pages for all books in each year:",source:"@site/docs/70-grouping/group.mdx",sourceDirName:"70-grouping",slug:"/grouping/group",permalink:"/aggregation-pipeline-lab/docs/grouping/group",draft:!1,unlisted:!1,editUrl:"https://github.com/mongodb-developer/aggregation-pipeline-lab/blob/main/docs/70-grouping/group.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Grouping Results",permalink:"/aggregation-pipeline-lab/docs/category/grouping-results"},next:{title:"Modifying Results",permalink:"/aggregation-pipeline-lab/docs/category/modifying-results"}},g={},l=[];function c(e){const n={code:"code",h1:"h1",p:"p",pre:"pre",...(0,s.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"-group",children:"\ud83d\udc50 Group"}),"\n",(0,o.jsx)(n.p,{children:"We can sum all the pages for all books in each year:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'db.books.aggregate([\n    {$group:{\n        _id: "$year",\n        totalPages: {$sum: "$pages"}\n    }}\n])\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Here, we group by the book's ",(0,o.jsx)(n.code,{children:"year"})," (the _id of the grouping), and then we create a new field called ",(0,o.jsx)(n.code,{children:"totalPages"})," that's the sum of all pages."]}),"\n",(0,o.jsx)(n.p,{children:"\ud83d\udc50 Can you get the results ordered ascending by year?"}),"\n",(0,o.jsxs)(r,{children:[(0,o.jsx)("summary",{children:"Answer"}),(0,o.jsx)("div",{children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'db.books.aggregate([\n    {$group:{\n        _id: "$year",\n        totalPages: {$sum: "$pages"}\n    }},\n    {$sort: {_id: 1}}\n])\n'})})})]}),"\n",(0,o.jsxs)(n.p,{children:["\ud83d\udc50 Can you get the average pages per year (hint: use ",(0,o.jsx)(n.code,{children:"$avg"}),")?"]}),"\n",(0,o.jsxs)(r,{children:[(0,o.jsx)("summary",{children:"Answer"}),(0,o.jsx)("div",{children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'db.books.aggregate([\n    {$group:{\n        _id: "$year",\n        totalPages: {$avg: "$pages"}\n    }},\n    {$sort: {_id: 1}}\n])\n'})})})]}),"\n",(0,o.jsx)(n.p,{children:"\ud83d\udc50 Which year had the most printed-out pages?"}),"\n",(0,o.jsxs)(r,{children:[(0,o.jsx)("summary",{children:"Answer"}),(0,o.jsx)("div",{children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'db.books.aggregate([\n    {$group:{\n        _id: "$year",\n        totalPages: {$sum: "$pages"}\n    }},\n    {$sort: {totalPages: -1}},\n    {$limit: 1}\n])\n'})})})]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>i});var o=r(6540);const s={},t=o.createContext(s);function a(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);