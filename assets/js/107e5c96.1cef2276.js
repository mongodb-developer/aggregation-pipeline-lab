"use strict";(self.webpackChunkaggregation_pipeline_workshop=self.webpackChunkaggregation_pipeline_workshop||[]).push([["5695"],{6812:function(e,n,r){r.r(n),r.d(n,{default:()=>g,frontMatter:()=>i,metadata:()=>a,assets:()=>u,toc:()=>d,contentTitle:()=>c});var a=JSON.parse('{"id":"using-arrays/simple-match-array","title":"\uD83D\uDC50 Simple Array Queries","description":"Find data in arrays","source":"@site/docs/40-using-arrays/1-simple-match-array.mdx","sourceDirName":"40-using-arrays","slug":"/using-arrays/simple-match-array","permalink":"/aggregation-pipeline-lab/docs/using-arrays/simple-match-array","draft":false,"unlisted":false,"editUrl":"https://github.com/mongodb-developer/aggregation-pipeline-lab/blob/main/docs/40-using-arrays/1-simple-match-array.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Using Arrays","permalink":"/aggregation-pipeline-lab/docs/category/using-arrays"},"next":{"title":"\uD83D\uDC50 Searching inside Objects in arrays","permalink":"/aggregation-pipeline-lab/docs/using-arrays/search-inside-objects-in-arrays"}}'),t=r("5893"),s=r("65"),l=r("8168"),o=r("7645");let i={},c="\uD83D\uDC50 Simple Array Queries",u={},d=[{value:"Find data in arrays",id:"find-data-in-arrays",level:2},{value:"Size of an array",id:"size-of-an-array",level:2}];function h(e){let n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.a)(),...e.components},{Details:r}=n;return r||function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"-simple-array-queries",children:"\uD83D\uDC50 Simple Array Queries"})}),"\n",(0,t.jsx)(n.h2,{id:"find-data-in-arrays",children:"Find data in arrays"}),"\n",(0,t.jsxs)(n.p,{children:["A JSON array can contain scalar values or objects. In our data, ",(0,t.jsx)(n.code,{children:"authors"})," have an array of the books they've authored (their ISBNs as Strings). Let's get one author:"]}),"\n",(0,t.jsxs)(l.Z,{groupId:"aggregations",children:[(0,t.jsxs)(o.Z,{value:"atlas",label:"Atlas UI",children:[(0,t.jsxs)(n.p,{children:["Remember to select the ",(0,t.jsx)(n.code,{children:"authors"})," collection in the UI."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"[\n  { $limit: 1 }\n]\n"})})]}),(0,t.jsx)(o.Z,{value:"mongodb-shell",label:"MongoDB Shell",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"db.authors.aggregate([\n  { $limit: 1 }\n])\n"})})})]}),"\n",(0,t.jsx)(n.p,{children:"\uD83D\uDC50 Run this aggregation to get one author."}),"\n",(0,t.jsx)(n.p,{children:"I got this one. (It can change depending on the data source you imported.)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"{\n  _id: ObjectId(\"64cc2db4830ba29148da4c3b\"),\n  name: 'Richard Bruce Wright',\n  sanitizedName: 'richardbrucewright',\n  books: [\n    '0002005018'\n  ],\n  aliases: [\n    'Wright, Richard Bruce'\n  ]\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Can I get all authors for book ",(0,t.jsx)(n.code,{children:"0002005018"}),"? For that, I want all authors that have ",(0,t.jsx)(n.code,{children:"0002005018"})," inside the ",(0,t.jsx)(n.code,{children:"books"})," array. Turns out it's quite simple:"]}),"\n",(0,t.jsxs)(l.Z,{groupId:"aggregations",children:[(0,t.jsx)(o.Z,{value:"atlas",label:"Atlas UI",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'[\n  {$match: {books: "0002005018"}}\n]\n'})})}),(0,t.jsx)(o.Z,{value:"mongodb-shell",label:"MongoDB Shell",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'db.authors.aggregate([\n  {$match: {books: "0002005018"}}\n])\n'})})})]}),"\n",(0,t.jsxs)(n.p,{children:["\uD83D\uDC50 Get the book's author name for ISBN ",(0,t.jsx)(n.code,{children:"0395623650"}),":"]}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:"Answer"}),(0,t.jsx)("div",{children:(0,t.jsxs)(l.Z,{groupId:"aggregations",children:[(0,t.jsxs)(o.Z,{value:"atlas",label:"Atlas UI",children:[(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'[\n  { $match: {books: "0395623650"} }\n]\n'})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:">   name: 'Juan Ram\xf3n Jim\xe9nez',\n"})})]}),(0,t.jsxs)(o.Z,{value:"mongodb-shell",label:"MongoDB Shell",children:[(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'db.authors.aggregate([\n  { $match: {books: "0395623650"} }\n])\n'})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:">   name: 'Juan Ram\xf3n Jim\xe9nez',\n"})})]})]})})]}),"\n",(0,t.jsx)(n.h2,{id:"size-of-an-array",children:"Size of an array"}),"\n",(0,t.jsxs)(n.p,{children:["What if we want to know how many aliases an author has? To do that, we can use ",(0,t.jsx)(n.code,{children:"$size"}),", adding the array field that we're interested in:"]}),"\n",(0,t.jsxs)(l.Z,{groupId:"aggregations",children:[(0,t.jsx)(o.Z,{value:"atlas",label:"Atlas UI",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'[\n  { $project: {\n      name: 1,\n      bookCount: {$size: "$books"}\n    }\n  },\n]\n'})})}),(0,t.jsx)(o.Z,{value:"mongodb-shell",label:"MongoDB Shell",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'db.authors.aggregate([\n  { $project: {\n      name: 1,\n      bookCount: {$size: "$books"}\n    }\n  },\n])\n'})})})]}),"\n",(0,t.jsxs)(n.p,{children:["\uD83D\uDC50 Who wrote the most books? (We can sort using ",(0,t.jsx)(n.code,{children:'{ $sort: {"bookCount": -1}}'}),".)"]}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:"Answer"}),(0,t.jsx)("div",{children:(0,t.jsxs)(l.Z,{groupId:"aggregations",children:[(0,t.jsx)(o.Z,{value:"atlas",label:"Atlas UI",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'[\n  {\n    $project: {\n        name: 1,\n        bookCount: {$size: "$books"}\n    }\n  },\n  { $sort: {"bookCount": -1} },\n  { $limit: 1 }\n]\n'})})}),(0,t.jsx)(o.Z,{value:"mongodb-shell",label:"MongoDB Shell",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'let addNumberBooks = {\n  $project: {\n      name: 1,\n      bookCount: {$size: "$books"}\n  }\n}\n\nlet orderByNumberOfBooksDesc = { $sort: {"bookCount": -1} }\n\nlet getOne = { $limit: 1 }\n\ndb.authors.aggregate([\n  addNumberBooks,\n  orderByNumberOfBooksDesc,\n  getOne,\n])\n'})})})]})})]})]})}function g(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},7645:function(e,n,r){r.d(n,{Z:()=>s});var a=r("5893");r("7294");var t=r("4904");function s(e){let{children:n,hidden:r,className:s}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,t.Z)("tabItem_Ymn6",s),hidden:r,children:n})}},8168:function(e,n,r){r.d(n,{Z:()=>x});var a=r("5893"),t=r("7294"),s=r("4904"),l=r("4718"),o=r("6550"),i=r("8714"),c=r("9207"),u=r("9413"),d=r("4510");function h(e){return t.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||t.isValidElement(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function g(e){let{value:n,tabValues:r}=e;return r.some(e=>e.value===n)}var m=r("6735");function p(e){let{className:n,block:r,selectedValue:t,selectValue:o,tabValues:i}=e,c=[],{blockElementScrollPositionUntilNextRender:u}=(0,l.o5)(),d=e=>{let n=e.currentTarget,r=i[c.indexOf(n)].value;r!==t&&(u(n),o(r))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{let r=c.indexOf(e.currentTarget)+1;n=c[r]??c[0];break}case"ArrowLeft":{let r=c.indexOf(e.currentTarget)-1;n=c[r]??c[c.length-1]}}n?.focus()};return(0,a.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":r},n),children:i.map(e=>{let{value:n,label:r,attributes:l}=e;return(0,a.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>{c.push(e)},onKeyDown:h,onClick:d,...l,className:(0,s.Z)("tabs__item","tabItem_LNqP",l?.className,{"tabs__item--active":t===n}),children:r??n},n)})})}function b(e){let{lazy:n,children:r,selectedValue:l}=e,o=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){let e=o.find(e=>e.props.value===l);return e?(0,t.cloneElement)(e,{className:(0,s.Z)("margin-top--md",e.props.className)}):null}return(0,a.jsx)("div",{className:"margin-top--md",children:o.map((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==l}))})}function j(e){let n=function(e){let{defaultValue:n,queryString:r=!1,groupId:a}=e,s=function(e){let{values:n,children:r}=e;return(0,t.useMemo)(()=>{let e=n??h(r).map(e=>{let{props:{value:n,label:r,attributes:a,default:t}}=e;return{value:n,label:r,attributes:a,default:t}});return!function(e){let n=(0,u.lx)(e,(e,n)=>e.value===n.value);if(n.length>0)throw Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,r])}(e),[l,m]=(0,t.useState)(()=>(function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!g({value:n,tabValues:r}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}let a=r.find(e=>e.default)??r[0];if(!a)throw Error("Unexpected error: 0 tabValues");return a.value})({defaultValue:n,tabValues:s})),[p,b]=function(e){let{queryString:n=!1,groupId:r}=e,a=(0,o.k6)(),s=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,c._X)(s),(0,t.useCallback)(e=>{if(!s)return;let n=new URLSearchParams(a.location.search);n.set(s,e),a.replace({...a.location,search:n.toString()})},[s,a])]}({queryString:r,groupId:a}),[j,x]=function(e){let{groupId:n}=e,r=n?`docusaurus.tab.${n}`:null,[a,s]=(0,d.Nk)(r);return[a,(0,t.useCallback)(e=>{r&&s.set(e)},[r,s])]}({groupId:a}),f=(()=>{let e=p??j;return g({value:e,tabValues:s})?e:null})();return(0,i.Z)(()=>{f&&m(f)},[f]),{selectedValue:l,selectValue:(0,t.useCallback)(e=>{if(!g({value:e,tabValues:s}))throw Error(`Can't select invalid tab value=${e}`);m(e),b(e),x(e)},[b,x,s]),tabValues:s}}(e);return(0,a.jsxs)("div",{className:(0,s.Z)("tabs-container","tabList__CuJ"),children:[(0,a.jsx)(p,{...n,...e}),(0,a.jsx)(b,{...n,...e})]})}function x(e){let n=(0,m.Z)();return(0,a.jsx)(j,{...e,children:h(e.children)},String(n))}},65:function(e,n,r){r.d(n,{Z:function(){return o},a:function(){return l}});var a=r(7294);let t={},s=a.createContext(t);function l(e){let n=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);